meta {
  name: reset-password
  type: http
  seq: 6
}

post {
  url: {{baseUrl}}/v1/auth/reset-password
  body: json
  auth: none
}

body:json {
  {
    "token": "{{resetToken}}",
    "newPassword": "NewSecurePassword123!"
  }
}

docs {
  # Reset Password

  Completes the password reset flow using a token from the reset email.

  ## Usage
  1. First, use the "request-password-reset" request to get a token
  2. Check server logs for the email (development mode)
  3. Copy the token from the reset link: `/reset-password?token=YOUR_TOKEN`
  4. Update `{{resetToken}}` environment variable or replace `{{resetToken}}` in the body
  5. Set your new password in `newPassword` field
  6. Send the request

  ## Notes
  - Token is single-use and expires after 1 hour
  - Password must be at least 8 characters
  - All existing sessions are invalidated after password reset
  - User must log in again with new password

  ## Environment Variable
  You can set the token in Bruno environment:
  - Key: `resetToken`
  - Value: (paste token from email)
}

settings {
  encodeUrl: true
  timeout: 0
}

tests {
  test("should return 200 on success", function() {
    expect(res.status).to.equal(200);
  });

  test("should return success message", function() {
    if (res.status === 200) {
      expect(res.body.message).to.equal('Password reset successful');
    }
  });

  test("should return error for invalid token", function() {
    if (res.status === 400) {
      expect(res.body.error).to.be.an('object');
      expect(res.body.error.message).to.be.a('string');
    }
  });
}
