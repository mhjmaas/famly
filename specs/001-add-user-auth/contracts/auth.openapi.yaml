openapi: 3.1.0
info:
  title: Famly Authentication API
  version: 0.1.0
  description: Email/password authentication endpoints backed by better-auth and MongoDB.
servers:
  - url: http://localhost:3000/v1
paths:
  /auth/register:
    post:
      summary: Register a new account
      description: Creates a user using the supplied email and password; returns 201 when successful.
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Account created
          headers:
            Set-Cookie:
              description: Optional session cookie when auto-login is enabled.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '409':
          description: Email already registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalError'
  /auth/login:
    post:
      summary: Authenticate existing user
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          headers:
            Set-Cookie:
              description: Session cookie (httpOnly, secure, SameSite=lax)
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSuccessResponse'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalError'
  /auth/me:
    get:
      summary: Retrieve current authenticated user
      operationId: getCurrentUser
      security:
        - SessionCookieAuth: []
        - BearerAuth: []
      description: Supports three authentication methods - cookie (web), JWT token (mobile/API - stateless), or session token (mobile/API - database-backed)
      responses:
        '200':
          description: Returns the current user's profile summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '401':
          description: Missing or expired session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalError'
  /auth/token:
    get:
      summary: Refresh JWT access token
      operationId: refreshToken
      security:
        - BearerAuth: []
      description: Exchange a session token for a new JWT access token. Use session token (not JWT) in Authorization header.
      responses:
        '200':
          description: New JWT access token issued
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                properties:
                  token:
                    type: string
                    description: New JWT access token (valid for 15 minutes)
        '401':
          description: Invalid or expired session token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalError'
components:
  securitySchemes:
    SessionCookieAuth:
      type: apiKey
      in: cookie
      name: better-auth.session_token
      description: HTTP-only session cookie for web clients
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT access token or session token for mobile/API clients
  schemas:
    RegisterRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: Must be unique and is stored lowercase.
        password:
          type: string
          minLength: 8
          description: Clear-text password that will be hashed server-side.
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
    AuthSuccessResponse:
      type: object
      required:
        - user
        - session
      properties:
        user:
          type: object
          required:
            - id
            - email
            - emailVerified
            - createdAt
            - updatedAt
          properties:
            id:
              type: string
              description: Unique user identifier
            email:
              type: string
              format: email
            name:
              type: string
              description: User's display name
            emailVerified:
              type: boolean
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
        session:
          type: object
          required:
            - expiresAt
          properties:
            expiresAt:
              type: string
              format: date-time
              description: Session expiration timestamp
        accessToken:
          type: string
          nullable: true
          description: JWT token (short-lived, 15 min) for stateless API authentication. Use in Authorization Bearer header for API requests.
        sessionToken:
          type: string
          nullable: true
          description: Session token (long-lived, 14 days) for refreshing access tokens. Use only with /auth/token endpoint.
    ProfileResponse:
      type: object
      required:
        - user
        - authType
      properties:
        user:
          type: object
          required:
            - id
            - email
            - emailVerified
            - createdAt
            - updatedAt
          properties:
            id:
              type: string
            email:
              type: string
              format: email
            name:
              type: string
            emailVerified:
              type: boolean
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
        authType:
          type: string
          enum: [cookie, bearer-jwt, bearer-session]
          description: Authentication method used for this request
  responses:
    ValidationError:
      description: Request failed validation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    InternalError:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    ErrorResponse:
      description: Standard error envelope
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                type: string
